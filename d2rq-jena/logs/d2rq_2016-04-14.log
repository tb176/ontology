2016-04-14 15:29:01.075 DEBUG [main][SparqlDemo.java:46] - --------------------读取的rdf文本内容-----------------
2016-04-14 15:29:01.115 DEBUG [main][SparqlDemo.java:50] - sparql=PREFIX info: <http://somewhere/peopleInfo#>    SELECT ?resource  WHERE    {     ?resource info:age ?age .     FILTER (?age >= 24)    }
2016-04-14 15:29:01.501 DEBUG [main][SparqlDemo.java:56] - ----------------sparql查询的内容------------------
2016-04-14 15:29:01.507 DEBUG [main][SparqlDemo.java:59] - -----------results结果集=空
2016-04-14 16:38:23.179 DEBUG [main][SparqlDemo.java:49] - --------------------读取的rdf文本内容-----------------
2016-04-14 16:38:23.210 DEBUG [main][SparqlDemo.java:53] - sparql=<rdf:RDF
  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns:vCard='http://www.w3.org/2001/vcard-rdf/3.0#'
   >

  <rdf:Description rdf:about="http://somewhere/JohnSmith/">
    <vCard:FN>John Smith</vCard:FN>
    <vCard:N rdf:parseType="Resource">
	<vCard:Family>Smith</vCard:Family>
	<vCard:Given>John</vCard:Given>
    </vCard:N>
  </rdf:Description>

  <rdf:Description rdf:about="http://somewhere/RebeccaSmith/">
    <vCard:FN>RebeccaSmith</vCard:FN>
    <vCard:N rdf:parseType="Resource">
	<vCard:Family>Smith</vCard:Family>
	<vCard:Given>Rebecca</vCard:Given>
    </vCard:N>
  </rdf:Description>

  <rdf:Description rdf:about="http://somewhere/SarahJones/">
    <vCard:FN>Sarah Jones</vCard:FN>
    <vCard:N rdf:parseType="Resource">
	<vCard:Family>Jones</vCard:Family>
	<vCard:Given>Sarah</vCard:Given>
    </vCard:N>
  </rdf:Description>

  <rdf:Description rdf:about="http://somewhere/MattJones/">
    <vCard:FN>Matt Jones</vCard:FN>
    <vCard:N
	vCard:Family="Jones"
	vCard:Given="Matthew"/>
  </rdf:Description>

</rdf:RDF>

2016-04-14 16:39:25.833 DEBUG [main][SparqlDemo.java:49] - --------------------读取的rdf文本内容-----------------
2016-04-14 16:39:25.849 DEBUG [main][SparqlDemo.java:53] - sparql=SELECT ?x  WHERE { ?x  <http://www.w3.org/2001/vcard-rdf/3.0#FN>  "John Smith" } 
2016-04-14 16:39:26.130 DEBUG [main][SparqlDemo.java:59] - ----------------sparql查询的内容------------------
2016-04-14 16:39:26.146 DEBUG [main][SparqlDemo.java:62] - -----------results结果集=空
2016-04-14 16:41:40.317 DEBUG [main][SparqlDemo.java:49] - --------------------读取的rdf文本内容-----------------
2016-04-14 16:41:40.349 DEBUG [main][SparqlDemo.java:53] - sparql=PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX map: <file:///C:/Program%20Files/d2rq-0.8.1/ontology.rdf#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX db: <file:///C:/Program%20Files/d2rq-0.8.1/ontology.rdf>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX vocab: <file:///C:/Program%20Files/d2rq-0.8.1/vocab/>
SELECT ?name ?p ?o 
WHERE {
  
  ?name vocab:connect_table_custno ?fieldname   
  ?name ?p ?o
  
}
2016-04-14 20:18:12.901 DEBUG [main][SparqlDemo.java:49] - --------------------读取的rdf文本内容-----------------
2016-04-14 20:18:12.925 DEBUG [main][SparqlDemo.java:53] - sparql=SELECT ?x  WHERE { ?x  <http://www.w3.org/2001/vcard-rdf/3.0#FN>  "John Smith" } 
2016-04-14 20:18:13.292 DEBUG [main][SparqlDemo.java:59] - ----------------sparql查询的内容------------------
2016-04-14 20:18:13.308 DEBUG [main][SparqlDemo.java:62] - -----------results结果集=空
2016-04-14 20:55:10.687 DEBUG [main][SparqlDemo.java:49] - --------------------读取的rdf文本内容-----------------
2016-04-14 20:55:10.711 DEBUG [main][SparqlDemo.java:53] - sparql=SELECT ?x  WHERE { ?x  <http://www.w3.org/2001/vcard-rdf/3.0#FN>  "John Smith" } 
2016-04-14 20:55:10.983 DEBUG [main][SparqlDemo.java:59] - ----------------sparql查询的内容------------------
2016-04-14 20:55:10.999 DEBUG [main][SparqlDemo.java:62] - -----------results结果集=空
2016-04-14 21:32:57.501 DEBUG [main][RDB2RDF.java:125] - --------------------select start-------------
2016-04-14 21:33:00.466 DEBUG [main][RDB2RDF.java:143] - -------d2rqModel--- {db:#papers/1 @vocab:papers_Conference db:#conferences/23541; db:#papers/1 @vocab:papers_Abstract "This paper describes an approach to derive assessments about information 
      sources based on individual feedback about the sources. We describe 
      TRELLIS, a system that helps users annotate their analysis of 
      alternative information sources that can be contradictory and 
      incomplete. As the user makes a decision on which sources to dismiss and 
      which to believe in making a final decision, TRELLIS captures the 
      derivation of the decision in a semantic markup. TRELLIS then uses these 
      annotations to derive an assessment of the source based on the 
      annotations of many individuals. Our work builds on the Semantic Web and 
      presents a tool that helps users create annotations that are in a mix of 
      formal and human language, and exploits the formal representations to 
      derive measures of trust in the content of Web resources and their 
      original source."; db:#papers/1 @vocab:papers_PaperID "1"^^http://www.w3.org/2001/XMLSchema#integer; db:#papers/1 @rdfs:label "papers #1"; db:#papers/1 @vocab:papers_Title "Trusting Information Sources One Citizen at a Time"; db:#papers/1 @vocab:papers_URI "http://trellis.semanticweb.org/expect/web/semanticweb/iswc02_trellis.pdf#Trusting Information Sources One Citizen at a Time"; db:#papers/1 @vocab:papers_Year "2002"^^http://www.w3.org/2001/XMLSchema#integer; db:#papers/1 @vocab:papers_Publish "true"^^http://www.w3.org/2001/XMLSchema#boolean; db:#papers/1 @rdf:type vocab:papers; db:#papers/2 @vocab:papers_Conference db:#conferences/23541; db:#papers/2 @vocab:papers_Abstract "This paper describes two approaches for automatically converting RDF Schema 
and RuleML sources into an inference engine and storage repository. Rather than 
using traditional inference systems, our solution bases on mainstream 
technologies like Java and relational database systems. While this necessarily 
imposes some restrictions, the ease of integration into an existing IT landscape 
is a major advantage. We present the conversion tools and their limitations. 
Furthermore, an extension to RuleML is proposed, that allows Java-enabled 
reaction rules, where calls to Java libraries can be performed upon a rule 
firing. This requires hosts to be Java-enabled when rules and code are moved 
across the web. However, the solution allows for great engineering 
flexibility."; db:#papers/2 @vocab:papers_PaperID "2"^^http://www.w3.org/2001/XMLSchema#integer; db:#papers/2 @rdfs:label "papers #2"; db:#papers/2 @vocab:papers_Title "Automatic Generation of Java/SQL based Inference Engines from RDF Schema and RuleML"; db:#papers/2 @vocab:papers_URI "http://www.i-u.de/schools/eberhart/iswc2002/#Automatic Generation of Java/SQL based Inference Engines from RDF Schema and RuleML"; db:#papers/2 @vocab:papers_Year "2002"^^http://www.w3.org/2001/XMLSchema#integer; db:#papers/2 @vocab:papers_Publish "true"^^http://www.w3.org/2001/XMLSchema#boolean...}
